/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: p2ptransaction.proto */

#ifndef PROTOBUF_C_p2ptransaction_2eproto__INCLUDED
#define PROTOBUF_C_p2ptransaction_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct P2pIpcMessage P2pIpcMessage;


/* --- enums --- */

typedef enum _P2pIpcMessage__Status {
  P2P__IPC_MESSAGE__STATUS__TEST = 0,
  P2P__IPC_MESSAGE__STATUS__OK = 1,
  P2P__IPC_MESSAGE__STATUS__ERROR = 2,
  P2P__IPC_MESSAGE__STATUS__FINISH = 3,
  P2P__IPC_MESSAGE__STATUS__WAIT = 4,
  P2P__IPC_MESSAGE__STATUS__BLOCK = 5,
  P2P__IPC_MESSAGE__STATUS__PING = 6,
  P2P__IPC_MESSAGE__STATUS__PONG = 7,
  P2P__IPC_MESSAGE__STATUS__ASK_IF_BLOCK_READY = 8,
  P2P__IPC_MESSAGE__STATUS__BLOCK_READY = 9,
  P2P__IPC_MESSAGE__STATUS__BLOCK_NOT_READY = 10
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(P2P__IPC_MESSAGE__STATUS)
} P2pIpcMessage__Status;

/* --- messages --- */

struct  P2pIpcMessage
{
  ProtobufCMessage base;
  char *date;
  protobuf_c_boolean has_timestamp_begin;
  uint64_t timestamp_begin;
  protobuf_c_boolean has_timestamp_end;
  uint64_t timestamp_end;
  protobuf_c_boolean has_difficulty;
  uint64_t difficulty;
  protobuf_c_boolean has_merkle_root;
  ProtobufCBinaryData merkle_root;
  protobuf_c_boolean has_nonce;
  ProtobufCBinaryData nonce;
  protobuf_c_boolean has_prev_block;
  ProtobufCBinaryData prev_block;
  P2pIpcMessage__Status status_code;
};
#define P2P__IPC_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&p2p__ipc_message__descriptor) \
    , NULL, 0, 0, 0, 0, 0, 0, 0, {0,NULL}, 0, {0,NULL}, 0, {0,NULL}, P2P__IPC_MESSAGE__STATUS__TEST }


/* P2pIpcMessage methods */
void   p2p__ipc_message__init
                     (P2pIpcMessage         *message);
size_t p2p__ipc_message__get_packed_size
                     (const P2pIpcMessage   *message);
size_t p2p__ipc_message__pack
                     (const P2pIpcMessage   *message,
                      uint8_t             *out);
size_t p2p__ipc_message__pack_to_buffer
                     (const P2pIpcMessage   *message,
                      ProtobufCBuffer     *buffer);
P2pIpcMessage *
       p2p__ipc_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   p2p__ipc_message__free_unpacked
                     (P2pIpcMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*P2pIpcMessage_Closure)
                 (const P2pIpcMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor p2p__ipc_message__descriptor;
extern const ProtobufCEnumDescriptor    p2p__ipc_message__status__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_p2ptransaction_2eproto__INCLUDED */
